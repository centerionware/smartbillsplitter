name: Build, Push, and Deploy to Kubernetes

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  # Dynamically set the image owner from the repository context
  IMAGE_OWNER: ${{ github.repository_owner }}
  FRONTEND_IMAGE_NAME: bill-splitter-frontend
  BACKEND_IMAGE_NAME: bill-splitter-backend

jobs:
  build-and-push-images:
    name: Build and Push Docker Images
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      actions: write # Required for gha cache

    outputs:
      image_tag: ${{ steps.meta.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.FRONTEND_IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=sha,prefix=,format=short

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.frontend.yaml
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.backend.yaml
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.BACKEND_IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-helm-chart:
    name: Update Helm Chart and Push to Production Branch
    needs: build-and-push-images
    if: success() && !contains(github.event.head_commit.message, '[ci skip]')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          path: workspace

      - name: Checkout production branch for current chart version
        uses: actions/checkout@v4
        with:
          ref: production
          path: production
          continue-on-error: true

      - name: Increment chart version
        id: increment_version
        run: |
          CHART_FILE="production/charts/bill-splitter/Chart.yaml"
          if [ -f "$CHART_FILE" ]; then
            CURRENT_VERSION=$(grep '^version:' $CHART_FILE | awk '{print $2}')
            NEW_VERSION=$(echo $CURRENT_VERSION | awk -F. -v OFS=. '{$NF = $NF + 1;} 1')
            echo "Found existing version $CURRENT_VERSION. New version: $NEW_VERSION."
          else
            NEW_VERSION=$(grep '^version:' workspace/charts/bill-splitter/Chart.yaml | awk '{print $2}')
            echo "No existing production version found. Using initial version: $NEW_VERSION."
          fi
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          sed -i "s/^version: .*/version: $NEW_VERSION/" workspace/charts/bill-splitter/Chart.yaml

      - name: Update Helm chart values
        run: |
          cd workspace
          IMAGE_TAG=${{ needs.build-and-push-images.outputs.image_tag }}
          sed -i "s|owner: PLACEHOLDER_OWNER|owner: ${{ env.IMAGE_OWNER }}|" charts/bill-splitter/values.yaml
          sed -i "s|IMAGE_TAG_PLACEHOLDER_FRONTEND|$IMAGE_TAG|g" charts/bill-splitter/templates/deployment.yaml
          sed -i "s|IMAGE_TAG_PLACEHOLDER_BACKEND|$IMAGE_TAG|g" charts/bill-splitter/templates/deployment.yaml

      - name: Commit and push changes to production branch
        run: |
          cd workspace
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add charts/bill-splitter/Chart.yaml charts/bill-splitter/values.yaml charts/bill-splitter/templates/deployment.yaml
          git commit -m "build: deploy ${{ needs.build-and-push-images.outputs.image_tag }}, chart version ${{ steps.increment_version.outputs.new_version }} [ci skip]"
          git push --force origin HEAD:production
