name: Build, Push, and Deploy to Kubernetes

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  # Dynamically set the image owner from the repository context
  IMAGE_OWNER: ${{ github.repository_owner }}
  FRONTEND_IMAGE_NAME: bill-splitter-frontend
  BACKEND_IMAGE_NAME: bill-splitter-backend

jobs:
  build-and-push-images:
    name: Build and Push Docker Images
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ciw-gh-homelab-runners
    permissions:
      contents: read
      packages: write
    
    outputs:
      image_tag: ${{ steps.meta.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: kubernetes
          driver-opts: |
            namespace=buildkit
          use: true
          buildkitd-config-inline: |
            [registry."docker.io"]
              mirrors = ["https://harbor.centerionware.com/dockerhub"]
            [registry."ghcr.io"]
              mirrors = ["https://harbor.centerionware.com/github"]
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.FRONTEND_IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.BACKEND_IMAGE_NAME }}
          tags: |
            type=sha,prefix=,format=short

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.frontend.yaml
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.backend.yaml
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_OWNER }}/${{ env.BACKEND_IMAGE_NAME }}:${{ steps.meta.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}

  update-helm-chart:
    name: Update Helm Chart and Push to Production Branch
    needs: build-and-push-images
    if: success() && !contains(github.event.head_commit.message, '[ci skip]')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Set image tag variable
        id: vars
        run: echo "tag=${{ needs.build-and-push-images.outputs.image_tag }}" >> $GITHUB_OUTPUT

      - name: Update Helm chart values
        run: |
          sed -i "s|owner: PLACEHOLDER_OWNER|owner: ${{ env.IMAGE_OWNER }}|" charts/bill-splitter/values.yaml
          sed -i "s|IMAGE_TAG_PLACEHOLDER_FRONTEND|${{ steps.vars.outputs.tag }}|g" charts/bill-splitter/templates/deployment.yaml
          sed -i "s|IMAGE_TAG_PLACEHOLDER_BACKEND|${{ steps.vars.outputs.tag }}|g" charts/bill-splitter/templates/deployment.yaml

      - name: Commit and push changes to production branch
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add charts/bill-splitter/values.yaml charts/bill-splitter/templates/deployment.yaml
          git commit -m "build: deploy ${{ steps.vars.outputs.tag }} [ci skip]"
          git push --force origin HEAD:production
