name: 22. Cleanup Docker Images & Artifacts

on:
  workflow_dispatch:

env:
  # This workflow requires a Personal Access Token with `repo` and `delete:packages` scopes.
  GH_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  cleanup-artifacts:
    name: Purge Old Artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Delete all artifacts older than 1 day
        uses: c-hive/gha-remove-artifacts@v1
        with:
          age: '1 day'
          token: ${{ env.GH_TOKEN }}

  cleanup-images:
    name: Purge Docker Images for ${{ matrix.package }}
    needs: cleanup-artifacts
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      fail-fast: false # Allow other cleanup jobs to run even if one fails
      matrix:
        package: [bill-splitter-frontend, bill-splitter-backend]
    
    steps:
      - name: Delete all container image versions
        run: |
          echo "Fetching owner type..."
          OWNER_TYPE=$(gh api repos/${{ github.repository }} -q '.owner.type')
          
          if [[ "$OWNER_TYPE" == "User" ]]; then
            API_PATH_PREFIX="/users/${{ github.repository_owner }}"
          else
            API_PATH_PREFIX="/orgs/${{ github.repository_owner }}"
          fi

          PACKAGE_VERSIONS_PATH="${API_PATH_PREFIX}/packages/container/${{ matrix.package }}/versions"
          
          echo "Fetching versions for ${{ matrix.package }} from ${PACKAGE_VERSIONS_PATH}..."
          VERSION_IDS=$(gh api --paginate $PACKAGE_VERSIONS_PATH -q '.[] | .id')

          if [[ -z "$VERSION_IDS" ]]; then
            echo "No image versions found for ${{ matrix.package }}. Nothing to delete."
            exit 0
          fi

          echo "Deleting versions for ${{ matrix.package }}..."
          for id in $VERSION_IDS; do
            echo "Deleting version ID: $id"
            gh api \
              --method DELETE \
              -H "Accept: application/vnd.github+json" \
              "${PACKAGE_VERSIONS_PATH%'/versions'}/versions/$id" \
              --silent || echo "--> Failed to delete version $id. It might be protected or already deleted."
          done
          echo "Cleanup complete for ${{ matrix.package }}."
